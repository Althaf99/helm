apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.name }}
  namespace: {{ .Values.global.namespace }}
  uid: {{ .Values.metadata.uid }}
  resourceVersion: {{ .Values.metadata.resourceVersion }}
  generation: {{ .Values.metadata.generation }}
  creationTimestamp: {{ .Values.metadata.creationTimestamp }}
  labels:
    {{- include "metadata.labels". |  nindent 4 }}
  annotations:
    {{- include "metadata.annotations". |  nindent 4 }}
  managedFields:
    {{- range .Values.metadata.managedFields }}
    - manager: {{ .manager }}
      operation: {{ .operation }}
      apiVersion: {{ .apiVersion }}
      time: {{ .time }}
      fieldsType: {{ .fieldsType }}
      fieldsV1:
        {{- include "metadata.managedFields.fieldsV1". |  nindent 4 }}
    {{- end }}
  selfLink: >-
  {{ .Values.metadata.selfLink }}  
status:
  observedGeneration: {{ .Values.status.observedGeneration }} 
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
  {{- range .Values.conditions }}
    - type: {{ .type }}
      status: '{{ .status }}'
      lastUpdateTime: '{{ .lastUpdateTime }}'
      lastTransitionTime: '{{ .lastTransitionTime }}'
      reason: {{ .reason }}
      message: >-
  {{ .message | indent 6 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "spec.matchLabels". |  nindent 4 }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "metadata.labels". |  nindent 4 }}
      annotations:
        {{- include "template.annotations". |  nindent 4 }}
    spec:
      volumes:
        {{- include "spec.volumes". |  nindent 4 }}
      containers:
        - name: {{ .Values.containers.name }}
          image: >-
          {{ .Values.containers.image | indent 6 }}   
          ports:
            - containerPort: 8080
              protocol: TCP
          envFrom:
            {{ - if.Values.env.secrets }}
              {{ - range .Values.env.secrets }}
                - {{ .refName }}
                  name: {{ .fileName }}
              {{ - end }}
            {{ - end }}
          resources:
            {{- if eq .Values.language "go" }}
            limits:
              cpu: 50m
              memory: 60Mi
            requests:
              cpu: 50m
              memory: 60Mi
            {{- end }}
            {{- if eq .Values.language "java-spring-boot" }}
            limits:
              cpu: 50m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 256Mi
            {{- end }}
            {{- if eq .Values.language "java-quarkus" }}
            limits:
              cpu: 50m
              memory: 120Mi
            requests:
              cpu: 25m
              memory: 100Mi
            {{- end }}
            terminationMessagePath: {{ .Values.spec.terminationMessagePath }}
            terminationMessagePolicy: File
            imagePullPolicy: Always
            securityContext:
              privileged: false
          volumeMounts:
            {{- include "spec.containers.volumeMounts". |  nindent 4 }}
          livenessProbe:
            {{- include "spec.containers.livenessProbe". |  nindent 4 }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: integration-service-sa-dev
      serviceAccount: integration-service-sa-dev
      securityContext: {}
      schedulerName: default-scheduler
      imagePullSecrets:
        -name: dockerhub-push-pull-secret
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 1
  progressDeadlineSeconds: 600